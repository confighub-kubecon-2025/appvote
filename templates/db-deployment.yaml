apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "appvote.fullname" . }}-db
  labels:
    app: db
    {{- include "appvote.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.db.replicas }}
  selector:
    matchLabels:
      app: db
      {{- include "appvote.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        app: db
        {{- include "appvote.selectorLabels" . | nindent 8 }}
    spec:
      containers:
      - name: postgres
        image: "{{ .Values.db.image.repository }}:{{ .Values.db.image.tag }}"
        imagePullPolicy: {{ .Values.db.image.pullPolicy }}
        env:
        - name: POSTGRES_USER
          value: {{ .Values.db.auth.username | quote }}
        - name: POSTGRES_PASSWORD
          value: {{ .Values.db.auth.password | quote }}
        ports:
        - name: postgres
          containerPort: {{ .Values.db.service.port }}
          protocol: TCP
        volumeMounts:
        - name: db-data
          mountPath: /var/lib/postgresql/data
      volumes:
      - name: db-data
        {{- if .Values.db.persistence.enabled }}
        persistentVolumeClaim:
          claimName: {{ include "appvote.fullname" . }}-db-pvc
        {{- else }}
        emptyDir: {}
        {{- end }}
